// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msghead.proto

#ifndef PROTOBUF_msghead_2eproto__INCLUDED
#define PROTOBUF_msghead_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace global {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msghead_2eproto();
void protobuf_AssignDesc_msghead_2eproto();
void protobuf_ShutdownFile_msghead_2eproto();

class Head;

// ===================================================================

class Head : public ::google::protobuf::Message {
 public:
  Head();
  virtual ~Head();
  
  Head(const Head& from);
  
  inline Head& operator=(const Head& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Head& default_instance();
  
  void Swap(Head* other);
  
  // implements Message ----------------------------------------------
  
  Head* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Head& from);
  void MergeFrom(const Head& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 magic = 1;
  inline bool has_magic() const;
  inline void clear_magic();
  static const int kMagicFieldNumber = 1;
  inline ::google::protobuf::int32 magic() const;
  inline void set_magic(::google::protobuf::int32 value);
  
  // required int64 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int64 index() const;
  inline void set_index(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:global.Head)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 magic_;
  ::google::protobuf::int64 index_;
  friend void  protobuf_AddDesc_msghead_2eproto();
  friend void protobuf_AssignDesc_msghead_2eproto();
  friend void protobuf_ShutdownFile_msghead_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Head* default_instance_;
};
// ===================================================================


// ===================================================================

// Head

// required int32 magic = 1;
inline bool Head::has_magic() const {
  return _has_bit(0);
}
inline void Head::clear_magic() {
  magic_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 Head::magic() const {
  return magic_;
}
inline void Head::set_magic(::google::protobuf::int32 value) {
  _set_bit(0);
  magic_ = value;
}

// required int64 index = 2;
inline bool Head::has_index() const {
  return _has_bit(1);
}
inline void Head::clear_index() {
  index_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 Head::index() const {
  return index_;
}
inline void Head::set_index(::google::protobuf::int64 value) {
  _set_bit(1);
  index_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace global

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msghead_2eproto__INCLUDED
